#include "message_string.hpp"
#include <map>

static const std::map<int, LPCTSTR> _messages = {
	{0x0000, TEXT("WM_NULL")},
	{0x0001, TEXT("WM_CREATE")},
	{0x0002, TEXT("WM_DESTROY")},
	{0x0003, TEXT("WM_MOVE")},
	{0x0005, TEXT("WM_SIZE")},
	{0x0006, TEXT("WM_ACTIVATE")},
	{0x0007, TEXT("WM_SETFOCUS")},
	{0x0008, TEXT("WM_KILLFOCUS")},
	{0x000A, TEXT("WM_ENABLE")},
	{0x000B, TEXT("WM_SETREDRAW")},
	{0x000C, TEXT("WM_SETTEXT")},
	{0x000D, TEXT("WM_GETTEXT")},
	{0x000E, TEXT("WM_GETTEXTLENGTH")},
	{0x000F, TEXT("WM_PAINT")},
	{0x0010, TEXT("WM_CLOSE")},
	{0x0011, TEXT("WM_QUERYENDSESSION")},
	{0x0013, TEXT("WM_QUERYOPEN")},
	{0x0016, TEXT("WM_ENDSESSION")},
	{0x0012, TEXT("WM_QUIT")},
	{0x0014, TEXT("WM_ERASEBKGND")},
	{0x0015, TEXT("WM_SYSCOLORCHANGE")},
	{0x0018, TEXT("WM_SHOWWINDOW")},
	{0x001A, TEXT("WM_WININICHANGE")},
	{0x001B, TEXT("WM_DEVMODECHANGE")},
	{0x001C, TEXT("WM_ACTIVATEAPP")},
	{0x001D, TEXT("WM_FONTCHANGE")},
	{0x001E, TEXT("WM_TIMECHANGE")},
	{0x001F, TEXT("WM_CANCELMODE")},
	{0x0020, TEXT("WM_SETCURSOR")},
	{0x0021, TEXT("WM_MOUSEACTIVATE")},
	{0x0022, TEXT("WM_CHILDACTIVATE")},
	{0x0023, TEXT("WM_QUEUESYNC")},
	{0x0024, TEXT("WM_GETMINMAXINFO")},
	{0x0026, TEXT("WM_PAINTICON")},
	{0x0027, TEXT("WM_ICONERASEBKGND")},
	{0x0028, TEXT("WM_NEXTDLGCTL")},
	{0x002A, TEXT("WM_SPOOLERSTATUS")},
	{0x002B, TEXT("WM_DRAWITEM")},
	{0x002C, TEXT("WM_MEASUREITEM")},
	{0x002D, TEXT("WM_DELETEITEM")},
	{0x002E, TEXT("WM_VKEYTOITEM")},
	{0x002F, TEXT("WM_CHARTOITEM")},
	{0x0030, TEXT("WM_SETFONT")},
	{0x0031, TEXT("WM_GETFONT")},
	{0x0032, TEXT("WM_SETHOTKEY")},
	{0x0033, TEXT("WM_GETHOTKEY")},
	{0x0037, TEXT("WM_QUERYDRAGICON")},
	{0x0039, TEXT("WM_COMPAREITEM")},
	{0x003D, TEXT("WM_GETOBJECT")},
	{0x0041, TEXT("WM_COMPACTING")},
	{0x0044, TEXT("WM_COMMNOTIFY")},
	{0x0046, TEXT("WM_WINDOWPOSCHANGING")},
	{0x0047, TEXT("WM_WINDOWPOSCHANGED")},
	{0x0048, TEXT("WM_POWER")},
	{0x004A, TEXT("WM_COPYDATA")},
	{0x004B, TEXT("WM_CANCELJOURNAL")},
	{0x004E, TEXT("WM_NOTIFY")},
	{0x0050, TEXT("WM_INPUTLANGCHANGEREQUEST")},
	{0x0051, TEXT("WM_INPUTLANGCHANGE")},
	{0x0052, TEXT("WM_TCARD")},
	{0x0053, TEXT("WM_HELP")},
	{0x0054, TEXT("WM_USERCHANGED")},
	{0x0055, TEXT("WM_NOTIFYFORMAT")},
	{0x007B, TEXT("WM_CONTEXTMENU")},
	{0x007C, TEXT("WM_STYLECHANGING")},
	{0x007D, TEXT("WM_STYLECHANGED")},
	{0x007E, TEXT("WM_DISPLAYCHANGE")},
	{0x007F, TEXT("WM_GETICON")},
	{0x0080, TEXT("WM_SETICON")},
	{0x0081, TEXT("WM_NCCREATE")},
	{0x0082, TEXT("WM_NCDESTROY")},
	{0x0083, TEXT("WM_NCCALCSIZE")},
	{0x0084, TEXT("WM_NCHITTEST")},
	{0x0085, TEXT("WM_NCPAINT")},
	{0x0086, TEXT("WM_NCACTIVATE")},
	{0x0087, TEXT("WM_GETDLGCODE")},
	{0x0088, TEXT("WM_SYNCPAINT")},
	{0x00A0, TEXT("WM_NCMOUSEMOVE")},
	{0x00A1, TEXT("WM_NCLBUTTONDOWN")},
	{0x00A2, TEXT("WM_NCLBUTTONUP")},
	{0x00A3, TEXT("WM_NCLBUTTONDBLCLK")},
	{0x00A4, TEXT("WM_NCRBUTTONDOWN")},
	{0x00A5, TEXT("WM_NCRBUTTONUP")},
	{0x00A6, TEXT("WM_NCRBUTTONDBLCLK")},
	{0x00A7, TEXT("WM_NCMBUTTONDOWN")},
	{0x00A8, TEXT("WM_NCMBUTTONUP")},
	{0x00A9, TEXT("WM_NCMBUTTONDBLCLK")},
	{0x00AB, TEXT("WM_NCXBUTTONDOWN")},
	{0x00AC, TEXT("WM_NCXBUTTONUP")},
	{0x00AD, TEXT("WM_NCXBUTTONDBLCLK")},
	{0x00FE, TEXT("WM_INPUT_DEVICE_CHANGE")},
	{0x00FF, TEXT("WM_INPUT")},
	{0x0100, TEXT("WM_KEYDOWN")},
	{0x0101, TEXT("WM_KEYUP")},
	{0x0102, TEXT("WM_CHAR")},
	{0x0103, TEXT("WM_DEADCHAR")},
	{0x0104, TEXT("WM_SYSKEYDOWN")},
	{0x0105, TEXT("WM_SYSKEYUP")},
	{0x0106, TEXT("WM_SYSCHAR")},
	{0x0107, TEXT("WM_SYSDEADCHAR")},
	{0x0109, TEXT("WM_UNICHAR")},
	{0x0108, TEXT("WM_KEYLAST")},
	{0x010D, TEXT("WM_IME_STARTCOMPOSITION")},
	{0x010E, TEXT("WM_IME_ENDCOMPOSITION")},
	{0x010F, TEXT("WM_IME_COMPOSITION")},
	{0x0110, TEXT("WM_INITDIALOG")},
	{0x0111, TEXT("WM_COMMAND")},
	{0x0112, TEXT("WM_SYSCOMMAND")},
	{0x0113, TEXT("WM_TIMER")},
	{0x0114, TEXT("WM_HSCROLL")},
	{0x0115, TEXT("WM_VSCROLL")},
	{0x0116, TEXT("WM_INITMENU")},
	{0x0117, TEXT("WM_INITMENUPOPUP")},
	{0x0119, TEXT("WM_GESTURE")},
	{0x011A, TEXT("WM_GESTURENOTIFY")},
	{0x011F, TEXT("WM_MENUSELECT")},
	{0x0120, TEXT("WM_MENUCHAR")},
	{0x0121, TEXT("WM_ENTERIDLE")},
	{0x0122, TEXT("WM_MENURBUTTONUP")},
	{0x0123, TEXT("WM_MENUDRAG")},
	{0x0124, TEXT("WM_MENUGETOBJECT")},
	{0x0125, TEXT("WM_UNINITMENUPOPUP")},
	{0x0126, TEXT("WM_MENUCOMMAND")},
	{0x0127, TEXT("WM_CHANGEUISTATE")},
	{0x0128, TEXT("WM_UPDATEUISTATE")},
	{0x0129, TEXT("WM_QUERYUISTATE")},
	{0x0132, TEXT("WM_CTLCOLORMSGBOX")},
	{0x0133, TEXT("WM_CTLCOLOREDIT")},
	{0x0134, TEXT("WM_CTLCOLORLISTBOX")},
	{0x0135, TEXT("WM_CTLCOLORBTN")},
	{0x0136, TEXT("WM_CTLCOLORDLG")},
	{0x0137, TEXT("WM_CTLCOLORSCROLLBAR")},
	{0x0138, TEXT("WM_CTLCOLORSTATIC")},
	{0x0200, TEXT("WM_MOUSEMOVE")},
	{0x0201, TEXT("WM_LBUTTONDOWN")},
	{0x0202, TEXT("WM_LBUTTONUP")},
	{0x0203, TEXT("WM_LBUTTONDBLCLK")},
	{0x0204, TEXT("WM_RBUTTONDOWN")},
	{0x0205, TEXT("WM_RBUTTONUP")},
	{0x0206, TEXT("WM_RBUTTONDBLCLK")},
	{0x0207, TEXT("WM_MBUTTONDOWN")},
	{0x0208, TEXT("WM_MBUTTONUP")},
	{0x0209, TEXT("WM_MBUTTONDBLCLK")},
	{0x020A, TEXT("WM_MOUSEWHEEL")},
	{0x020B, TEXT("WM_XBUTTONDOWN")},
	{0x020C, TEXT("WM_XBUTTONUP")},
	{0x020D, TEXT("WM_XBUTTONDBLCLK")},
	{0x020E, TEXT("WM_MOUSEHWHEEL")},
	{0x020D, TEXT("WM_MOUSELAST")},
	{0x020A, TEXT("WM_MOUSELAST")},
	{0x0209, TEXT("WM_MOUSELAST")},
	{0x0210, TEXT("WM_PARENTNOTIFY")},
	{0x0211, TEXT("WM_ENTERMENULOOP")},
	{0x0212, TEXT("WM_EXITMENULOOP")},
	{0x0213, TEXT("WM_NEXTMENU")},
	{0x0214, TEXT("WM_SIZING")},
	{0x0215, TEXT("WM_CAPTURECHANGED")},
	{0x0216, TEXT("WM_MOVING")},
	{0x0218, TEXT("WM_POWERBROADCAST")},
	{0x0219, TEXT("WM_DEVICECHANGE")},
	{0x0220, TEXT("WM_MDICREATE")},
	{0x0221, TEXT("WM_MDIDESTROY")},
	{0x0222, TEXT("WM_MDIACTIVATE")},
	{0x0223, TEXT("WM_MDIRESTORE")},
	{0x0224, TEXT("WM_MDINEXT")},
	{0x0225, TEXT("WM_MDIMAXIMIZE")},
	{0x0226, TEXT("WM_MDITILE")},
	{0x0227, TEXT("WM_MDICASCADE")},
	{0x0228, TEXT("WM_MDIICONARRANGE")},
	{0x0229, TEXT("WM_MDIGETACTIVE")},
	{0x0230, TEXT("WM_MDISETMENU")},
	{0x0231, TEXT("WM_ENTERSIZEMOVE")},
	{0x0232, TEXT("WM_EXITSIZEMOVE")},
	{0x0233, TEXT("WM_DROPFILES")},
	{0x0234, TEXT("WM_MDIREFRESHMENU")},
	{0x0238, TEXT("WM_POINTERDEVICECHANGE")},
	{0x0239, TEXT("WM_POINTERDEVICEINRANGE")},
	{0x023A, TEXT("WM_POINTERDEVICEOUTOFRANGE")},
	{0x0240, TEXT("WM_TOUCH")},
	{0x0241, TEXT("WM_NCPOINTERUPDATE")},
	{0x0242, TEXT("WM_NCPOINTERDOWN")},
	{0x0243, TEXT("WM_NCPOINTERUP")},
	{0x0245, TEXT("WM_POINTERUPDATE")},
	{0x0246, TEXT("WM_POINTERDOWN")},
	{0x0247, TEXT("WM_POINTERUP")},
	{0x0249, TEXT("WM_POINTERENTER")},
	{0x024A, TEXT("WM_POINTERLEAVE")},
	{0x024B, TEXT("WM_POINTERACTIVATE")},
	{0x024C, TEXT("WM_POINTERCAPTURECHANGED")},
	{0x024D, TEXT("WM_TOUCHHITTESTING")},
	{0x024E, TEXT("WM_POINTERWHEEL")},
	{0x024F, TEXT("WM_POINTERHWHEEL")},
	{0x0251, TEXT("WM_POINTERROUTEDTO")},
	{0x0252, TEXT("WM_POINTERROUTEDAWAY")},
	{0x0253, TEXT("WM_POINTERROUTEDRELEASED")},
	{0x0281, TEXT("WM_IME_SETCONTEXT")},
	{0x0282, TEXT("WM_IME_NOTIFY")},
	{0x0283, TEXT("WM_IME_CONTROL")},
	{0x0284, TEXT("WM_IME_COMPOSITIONFULL")},
	{0x0285, TEXT("WM_IME_SELECT")},
	{0x0286, TEXT("WM_IME_CHAR")},
	{0x0288, TEXT("WM_IME_REQUEST")},
	{0x0290, TEXT("WM_IME_KEYDOWN")},
	{0x0291, TEXT("WM_IME_KEYUP")},
	{0x02A1, TEXT("WM_MOUSEHOVER")},
	{0x02A3, TEXT("WM_MOUSELEAVE")},
	{0x02A0, TEXT("WM_NCMOUSEHOVER")},
	{0x02A2, TEXT("WM_NCMOUSELEAVE")},
	{0x02B1, TEXT("WM_WTSSESSION_CHANGE")},
	{0x02c0, TEXT("WM_TABLET_FIRST")},
	{0x02df, TEXT("WM_TABLET_LAST")},
	{0x02E0, TEXT("WM_DPICHANGED")},
	{0x02E2, TEXT("WM_DPICHANGED_BEFOREPARENT")},
	{0x02E3, TEXT("WM_DPICHANGED_AFTERPARENT")},
	{0x02E4, TEXT("WM_GETDPISCALEDSIZE")},
	{0x0300, TEXT("WM_CUT")},
	{0x0301, TEXT("WM_COPY")},
	{0x0302, TEXT("WM_PASTE")},
	{0x0303, TEXT("WM_CLEAR")},
	{0x0304, TEXT("WM_UNDO")},
	{0x0305, TEXT("WM_RENDERFORMAT")},
	{0x0306, TEXT("WM_RENDERALLFORMATS")},
	{0x0307, TEXT("WM_DESTROYCLIPBOARD")},
	{0x0308, TEXT("WM_DRAWCLIPBOARD")},
	{0x0309, TEXT("WM_PAINTCLIPBOARD")},
	{0x030A, TEXT("WM_VSCROLLCLIPBOARD")},
	{0x030B, TEXT("WM_SIZECLIPBOARD")},
	{0x030C, TEXT("WM_ASKCBFORMATNAME")},
	{0x030D, TEXT("WM_CHANGECBCHAIN")},
	{0x030E, TEXT("WM_HSCROLLCLIPBOARD")},
	{0x030F, TEXT("WM_QUERYNEWPALETTE")},
	{0x0310, TEXT("WM_PALETTEISCHANGING")},
	{0x0311, TEXT("WM_PALETTECHANGED")},
	{0x0312, TEXT("WM_HOTKEY")},
	{0x0317, TEXT("WM_PRINT")},
	{0x0318, TEXT("WM_PRINTCLIENT")},
	{0x0319, TEXT("WM_APPCOMMAND")},
	{0x031A, TEXT("WM_THEMECHANGED")},
	{0x031D, TEXT("WM_CLIPBOARDUPDATE")},
	{0x031E, TEXT("WM_DWMCOMPOSITIONCHANGED")},
	{0x031F, TEXT("WM_DWMNCRENDERINGCHANGED")},
	{0x0320, TEXT("WM_DWMCOLORIZATIONCOLORCHANGED")},
	{0x0321, TEXT("WM_DWMWINDOWMAXIMIZEDCHANGE")},
	{0x0323, TEXT("WM_DWMSENDICONICTHUMBNAIL")},
	{0x0326, TEXT("WM_DWMSENDICONICLIVEPREVIEWBITMAP")},
	{0x033F, TEXT("WM_GETTITLEBARINFOEX")},
	{0x0358, TEXT("WM_HANDHELDFIRST")},
	{0x035F, TEXT("WM_HANDHELDLAST")},
	{0x0360, TEXT("WM_AFXFIRST")},
	{0x037F, TEXT("WM_AFXLAST")},
	{0x0380, TEXT("WM_PENWINFIRST")},
	{0x038F, TEXT("WM_PENWINLAST")},
};

namespace shoujin::gui::logging {

LPCTSTR LookupWindowMessageText(UINT msg)
{
	auto const it = _messages.find(msg);
	if(it == _messages.cend())
		return TEXT("Unknown message");
	else
		return it->second;
}

tstring FormatWindowMessageText(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam)
{
	auto msg_name = LookupWindowMessageText(msg);

	tstringstream ss;
	ss
		<< TEXT("hwnd: ") << hwnd << std::endl
		<< TEXT("message_id: ") << std::hex << TEXT("0x") << msg << std::dec << std::endl
		<< TEXT("wparam: ") << wparam << std::endl
		<< TEXT("lparam: ") << lparam << std::endl
		<< TEXT("message: ") << msg_name << std::endl;

	return ss.str();
}

tstring FormatWindowMessageHeader()
{
	return TEXT("hwnd\tmessage_id\twparam\tlparam\tmessage\r\n");
}

tstring FormatWindowMessageLine(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam)
{
	auto msg_name = LookupWindowMessageText(msg);

	tstringstream ss;
	ss
		<< hwnd << TEXT('\t')
		<< std::hex << TEXT("0x") << msg << std::dec << TEXT('\t')
		<< wparam << TEXT('\t')
		<< lparam << TEXT('\t')
		<< msg_name << std::endl;

	return ss.str();
}

}
