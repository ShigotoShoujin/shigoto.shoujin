int

class Rows : Iterable<Row>, Iterator<Row>
	Row* begin
	Row* end

class Row : Iterable<int>
	int* begin
	int* end

for(auto&& row : grid.Rows())
	//grid.Rows has Row* begin
	//row is *grid.Rows.begin is Row
	//++row is Row operator++

for(auto&& cell : row)
	//row has int* begin
	//cell is *row.begin is int
	//++row is int pointer arithmetic


class Row : Iterable<T>
	int* begin
	int* end

class Rows : Iterable<Iterator<Iterable<T>>>
{
	Iterator<Iterable<T>> begin();
	Iterator<Iterable<T>> end();
}

class Rows : Iterable<Iterator<Row>>
{
	Iterator<Row> begin();
	Iterator<Row> end();
}

for(auto&& row : grid.Rows())
	for(auto&& cell : row)
		cell is int
		int* row.begin
		operator++ is on int*
		row is Iterable<int>
		row is Iterable<T>
